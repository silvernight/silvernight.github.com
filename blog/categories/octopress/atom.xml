<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | Jamel Octopress Blog]]></title>
  <link href="http://silvernight.github.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://silvernight.github.com/"/>
  <updated>2012-11-16T15:05:11+08:00</updated>
  <id>http://silvernight.github.com/</id>
  <author>
    <name><![CDATA[Jamel@Silvernight]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[install_octopress_on_arch]]></title>
    <link href="http://silvernight.github.com/blog/2012/11/16/install-octopress-on-arch/"/>
    <updated>2012-11-16T15:01:00+08:00</updated>
    <id>http://silvernight.github.com/blog/2012/11/16/install-octopress-on-arch</id>
    <content type="html"><![CDATA[<h2>install rvm on archlinux</h2>

<h3>1.安装 git</h3>

<p>$ sudo pacman -S git</p>

<h3>2.安装 rvm[2]</h3>

<p>$ curl https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer | bash -s stable</p>

<h3>3.在 .bashrc/.zshrc 加入RVM函数</h3>

<p>$ echo '[[ -s $HOME/.rvm/scripts/rvm ]] &amp;&amp; source $HOME/.rvm/scripts/rvm' >> ~/.zshrc
source ~/.zshrc</p>

<h3>4.根据安装脚本提示输入</h3>

<p>$ source /home/jamel/.rvm/scripts/rvm</p>

<h3>5.安装依赖包（下面命令会输出一个指南，直接复制其中的命令就行）:</h3>

<p>$ rvm requirements</p>

<!--more-->


<p>Result:
```
To install rbx and/or Ruby 1.9 head (MRI) (eg. 1.9.2-head),
then you must install and use rvm 1.8.7 first.</p>

<p>Additional Dependencies:</p>

<h1>For Ruby / Ruby HEAD (MRI, Rubinius, &amp; REE), install the following:</h1>

<p>  ruby: pacman -Sy --noconfirm gcc patch curl zlib readline libxml2 libxslt git autoconf automake diffutils make libtool bison subversion</p>

<h1>For JRuby, install the following:</h1>

<p>  jruby: pacman -Sy --noconfirm jdk7-openjdk jre7-openjdk curl
  jruby-head: pacman -Sy apache-ant</p>

<h1>For IronRuby, install the following:</h1>

<p>  ironruby: pacman -Sy --noconfirm mono
```</p>

<h3>6.根据上面的"For Ruby"的命令提示输入命令：</h3>

<p>$ pacman -Sy --noconfirm gcc patch curl zlib readline libxml2 libxslt git autoconf automake diffutils make libtool bison subversion</p>

<h3>7.安装ruby 1.9.2并使用</h3>

<p>$ rvm install 1.9.2 &amp;&amp; rvm use 1.9.2</p>

<h3>8.保持rubygems最新</h3>

<p>$ rvm rubygems latest</p>

<h3>9.检查ruby版本是否为1.9.2</h3>

<p>$ ruby -v</p>

<h2>安装Octopress</h2>

<h1>clone octopress</h1>

<p>$ git clone https://github.com/imathis/octopress.git octopress
$ cd octopress</p>

<h1>安装依赖</h1>

<p>$ gem install bundler
$ bundle install</p>

<h1>安装默认主题</h1>

<p>$ rake install</p>

<h1>设定octopress，参见[4]</h1>

<h1>......</h1>

<h1>生成博客</h1>

<p>$ rake generate #生成
$ rake watch    #实时观察变更
$ rake preview  #在http://localhost:4000上预览</p>

<h1>配置github</h1>

<p>$ rake setup_github_pages #按提示操作即可</p>

<h1>推送博客</h1>

<p>$ rake deploy</p>

<h1>或者</h1>

<p>$ rake push</p>

<h4>Bugs</h4>

<ol>
<li>rake generate时报错</li>
</ol>


<pre><code>rake aborted!
You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2. Using bundle exec may solve this.

这是因为Gemfile.lock不更新的原因，用bundle update可更新，但octopress不推荐更新Gemfile.lock。解决办法是用以下命令来替代：

# 其他rake命令也要如此，直到上游更新了Gemfile.lock。
bundle exec rake generate
</code></pre>

<ol>
<li>其余可能出现的bug：
  http://blog.gonzih.org/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux/
  http://jgarber.lighthouseapp.com/projects/13054/tickets/245-error-installing-redcloth-428</li>
</ol>


<h3>Bugs Solution</h3>

<p>下面这些是我花了一两个小时才解决了一些冲突问题。
首先输入rake install后出现了这个问题：</p>

<pre><code>You have already activated rake 10.0.1, but your Gemfile requires rake 0.9.2. Using bundle exec may solve this.
</code></pre>

<p>经过搜索，可以这样解决</p>

<pre><code>rvm use @global &amp;&amp; gem uninstall rake -v 10.0.1  
rvm use @ &amp;&amp; gem uninstall rake -v 10.0.1
</code></pre>

<p>原理就是停止当前正在激活的rake, 然后再删除它。</p>

<p>然后又出现了新的问题</p>

<pre><code>File "&lt;string&gt;", line 1
    import sys; print sys.executable
                        ^
SyntaxError: invalid syntax
</code></pre>

<p>在这个网站<a href="http://blog.dayanjia.com/2012/04/fix-rubypython-bug-in-arch-linux/">http://blog.dayanjia.com/2012/04/fix-rubypython-bug-in-arch-linux/</a>中发现了原来是python2和python3的冲突问题，晕...archlinux用的是python3，而octopress默认用的是python2</p>

<pre><code>然后照着教程在plugins下新建一个newfile.rv文件，内容如下：

require 'pygments'

if !!RUBY_PLATFORM['linux']
    RubyPython.configure :python_exe =&gt; '/usr/bin/python2.7'
end
</code></pre>

<p>然而却出现了这样的问题：
LoadError: Could not open library 'lib.so': lib.so: cannot open shared object file: No such file or directory</p>

<p>这个问题在<a href="https://github.com/tmm1/pygments.rb/issues/10">https://github.com/tmm1/pygments.rb/issues/10</a>中有描述，看得很辛苦，测试了许多种方法（汗，居然没人总结该怎么做）后发现如果在ubuntu中可以安装python-devel后可能再建一些符号连接即可，然而在arch中没有devel包的。尝试了许久，最后发现只要在Gemfile中更改</p>

<pre><code>gem 'pygments.rb', '~&gt; 0.2.12'
</code></pre>

<p>为：</p>

<pre><code>gem 'pygments.rb', '~&gt; 0.3.2'
</code></pre>

<p>即可。连plugins下的那个rb文件都可以不用。</p>

<p>也听了讨论组的人所说，卸载原来的rubypython，换了最新版本的rubypython但发现这样一点用也没有。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress test]]></title>
    <link href="http://silvernight.github.com/blog/2012/11/15/octopress-test/"/>
    <updated>2012-11-15T15:02:00+08:00</updated>
    <id>http://silvernight.github.com/blog/2012/11/15/octopress-test</id>
    <content type="html"><![CDATA[<h1>Just For test</h1>

<h3>include code:</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (test.js)</span> <a href='/downloads/code/test.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * sample javascript from xui</span>
</span><span class='line'><span class="cm"> * */</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="kc">undefined</span><span class="p">,</span>
</span><span class='line'>	<span class="nx">xui</span><span class="p">,</span>
</span><span class='line'>	<span class="nb">window</span>     <span class="o">=</span> <span class="k">this</span><span class="p">,</span>
</span><span class='line'>	<span class="nx">string</span>     <span class="o">=</span> <span class="k">new</span> <span class="nb">String</span><span class="p">(</span><span class="s1">&#39;string&#39;</span><span class="p">),</span>
</span><span class='line'>	<span class="nb">document</span>   <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span>
</span><span class='line'>	<span class="nx">simpleExpr</span> <span class="o">=</span> <span class="sr">/^#?([\w-]+)$/</span><span class="p">,</span>
</span><span class='line'>	<span class="nx">idExpr</span>     <span class="o">=</span> <span class="sr">/^#/</span><span class="p">,</span>
</span><span class='line'>	<span class="nx">tagExpr</span>    <span class="o">=</span> <span class="sr">/&lt;([\w:]+)/</span><span class="p">,</span>
</span><span class='line'>	<span class="nx">slice</span>      <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>  <span class="p">};</span>
</span><span class='line'><span class="k">try</span> <span class="p">{</span> <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nx">slice</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeType</span><span class="p">;</span>  <span class="p">}</span>
</span><span class='line'><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span> <span class="nx">slice</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> <span class="kd">var</span> <span class="nx">ret</span><span class="o">=</span><span class="p">[];</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>	<span class="nx">ret</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span> <span class="k">return</span> <span class="nx">ret</span><span class="p">;</span> 	<span class="p">};</span>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="nb">window</span><span class="p">.</span><span class="nx">x$</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">xui</span> <span class="o">=</span> <span class="nx">xui</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span> <span class="nx">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>		<span class="k">return</span> <span class="k">new</span> <span class="nx">xui</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span> <span class="nx">context</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>	<span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>include picture</h3>

<p><img src="http://i5.minus.com:81/i01yeD3zCWPoV.jpg" alt="test picture" /></p>

<!--more-->


<h3>include gist(gist 4076902)</h3>

<p><div><script src='https://gist.github.com/4076902.js?file='></script>
<noscript><pre><code>#include &lt;stdio.h&gt;

int main
{
  printf(&quot;hello world&quot;);
}</code></pre></noscript></div>
</p>

<h3>code block</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello World!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>#</h2>

<h3>jsfiddle</h3>

<p><iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/Q2v3n/embedded/js,resources,html,css,result/light/"></iframe></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning octopress]]></title>
    <link href="http://silvernight.github.com/blog/2012/11/15/learning-octopress/"/>
    <updated>2012-11-15T14:11:00+08:00</updated>
    <id>http://silvernight.github.com/blog/2012/11/15/learning-octopress</id>
    <content type="html"><![CDATA[<h1>Learning Octopress</h1>

<h2>Sharing Code Snippets</h2>

<p>octopress的分享代码的功能非常强大。它提供了多种分享代码的功能。
如下：</p>

<ul>
<li> A Sass port of Solarized syntax highlighting created specifically for Octopress.</li>
<li> Gist code embedding - by Brandon Tilly.</li>
<li> Insert code snippets from your filesystem with a download link.</li>
<li> Easy inline code blocks with &lt;figure&gt; and &lt;figcaption&gt; and optional download links.</li>
<li> Pygments caching - a Jekyll community plugin.</li>
<li> Table based line numbers added with javascript.</li>
</ul>


<!--more-->


<h3>Solarized highlighting</h3>

<p>Solarized has a beautiful syntax highlighting color scheme, but reproducing it requires a highly sophisticated highlighting engine. Pygments (the highlighter Jekyll uses) processes code snippets into styleable HTML, but it isn’t nearly as powerful as the highlighting engine in Vim for example.</p>

<h6>注意：为了避免被octopress解析，下面代码中的{和}与%的中间都加了个空格。</h6>

<h3>Backtick Code blocks</h3>

<h4>syntax</h4>

<pre><code>``` [language] [title] [url] [link text]
code snippet
```
</code></pre>

<h3>Gist embedding</h3>

<p>刚刚研究了一下gist，发现gist原来是github提供的一种代码分享的功能，可以在githbu上创建gist代码，然后通过gist id来引用代码，Gist代码会存放在git的仓库，因此可以用git clone来克隆gist代码非常方便。
在octopress中可以这样引用gist代码</p>

<p>```</p>

<pre><code>{ % gist gist_id [filename] % }
</code></pre>

<p>```</p>

<h3>Include Code Snippets</h3>

<h4>syntax</h4>

<p>```</p>

<pre><code>{ % include_code [title] [lang:language] path/to/file % }
</code></pre>

<p>```</p>

<h3>Inline Code blocks</h3>

<p><code>
{ % codeblock [title] [lang:objc] [url] [link text] % }
[rectangle setX: 10 y: 10 width: 20 height: 20];
{ % endcodeblock % }
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress resources]]></title>
    <link href="http://silvernight.github.com/blog/2012/11/15/octopress-resources/"/>
    <updated>2012-11-15T09:30:00+08:00</updated>
    <id>http://silvernight.github.com/blog/2012/11/15/octopress-resources</id>
    <content type="html"><![CDATA[<h1>octopress资料汇总</h1>

<h2>blog:</h2>

<h5>Generating a Table of Contents in Octopress : <a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/</a></h5>

<h5>octopress customizatoin : <a href="http://www.linuxabc.net.cn/blog/octopress-customization/">http://www.linuxabc.net.cn/blog/octopress-customization/</a></h5>

<h5>Changing Octopress's Header : <a href="http://blog.bigdinosaur.org/changing-octopresss-header/">http://blog.bigdinosaur.org/changing-octopresss-header/</a></h5>

<h5>Octopress博客从零开始 : <a href="http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-i/">http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-i/</a></h5>

<h5>octopress 主题:</h5>

<h6>slash : <a href="http://zespia.tw/blog/2012/01/25/slash-theme/">http://zespia.tw/blog/2012/01/25/slash-theme/</a></h6>
]]></content>
  </entry>
  
</feed>
